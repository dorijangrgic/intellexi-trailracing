version: '3.8'

services:

  db:
    container_name: db
    image: postgres:15.1
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: intellexi
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  rabbitmq:
    container_name: message-broker
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_CONFIG_FILE: /etc/rabbitmq/conf.d/rabbitmq.conf
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/conf.d/rabbitmq.conf
      - ./rabbitmq/definitions.json:/etc/rabbitmq/conf.d/definitions.json
    networks:
      - backend

  command-service:
    container_name: command-service
    build:
      context: .
      dockerfile: backend/src/Intellexi.TrailRacing.CommandService/Dockerfile
    ports:
      - "8081:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      - rabbitmq
    networks:
      - backend

  query-service:
    container_name: query-service
    build:
      context: .
      dockerfile: backend/src/Intellexi.TrailRacing.QueryService/Dockerfile
    ports:
      - "8082:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      - db
      - rabbitmq
    networks:
      - backend

  web-app:
    container_name: web-app
    build:
      context: frontend/intellexi-trailracing-webapp
      dockerfile: Dockerfile
    ports:
      - "8083:80"
    depends_on:
      - command-service
      - query-service
    networks:
      - backend
      - frontend

volumes:
  postgres_data:

networks:
  frontend:
  backend: